---

import { allCategoryMovies ,allDataDownloaded } from "../../utils/useProvider";
import ShowDataSections from '../../components/ShowDataSections.astro'
import BotonHome from '../../UI/BotonHome.astro'

import LayoutContainer from "../../components/LayoutContainer.astro";
import Layout from "../../layouts/Layout.astro";

export interface TFilter {
  id: number | string;
    categories: number[];
    name?:string
}

export function getStaticPaths() {
  //  return ([{params:{category:12}}])

  return allCategoryMovies?.map((rep) => ({
    params: { categoryID: rep.id },
  }));
}
const { categoryID } = Astro.params;

const showData  = allCategoryMovies != undefined && allCategoryMovies.find(info => info.id == categoryID);

const searchedByCategory: TFilter[] = allDataDownloaded.map(data => ({id:data.id,categories:data.genre_ids}))
const filterMoreDeep:TFilter[] = searchedByCategory.filter(data => ( data.categories.find(category => category == categoryID) ))
const odersResults = allDataDownloaded.filter(allData => { 
  return  filterMoreDeep.find(imtem => imtem.id ==allData.id ) })



---
<Layout title="Welcome to Astro.">
  <LayoutContainer styles=" text-white overflow-hidden    mb-60">
<section>
  {odersResults.length == 0 ? (<p class=" text-white font-semibold text-3xl ml-6 sm:ml-16 "> No resltados</p>
    <BotonHome/>
    
    ):
  (<ShowDataSections  title={`Resultados de ${showData?.name}`}  data={odersResults}/>

  <BotonHome stiles="relative bottom-20"/>

  )}
</section>

</LayoutContainer>
</Layout>